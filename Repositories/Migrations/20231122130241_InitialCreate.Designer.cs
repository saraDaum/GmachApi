// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Models;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(GmachimSaraAndShaniContext))]
<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
    [Migration("20231122130241_InitialCreate")]
========
    [Migration("20231116152725_InitialCreate")]
>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.Property<int>("AccontId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccontId"));

                    b.Property<string>("AccountsNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
========
                    b.Property<int>("BorrowerUserId")
                        .HasColumnType("int");

>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmAcountFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OwnerIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccontId");

<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
========
                    b.HasIndex("BorrowerUserId");

                    b.HasIndex("UserId")
                        .IsUnique();

>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Repositories.Models.Deposit", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositId"));

                    b.Property<DateTime>("DateToPull")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DepositId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("Repositories.Models.Guarantor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountAccontId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoanDetailsLoanId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountAccontId");

                    b.HasIndex("LoanDetailsLoanId");

                    b.ToTable("Guarantors");
                });

            modelBuilder.Entity("Repositories.Models.LoanDetails", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
========
                    b.Property<int?>("AccountAccontId")
                        .HasColumnType("int");

                    b.Property<int?>("BorrowerUserId")
                        .HasColumnType("int");

>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                    b.Property<DateTime>("DateToGetBack")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanerId")
                        .HasColumnType("int");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoanId");

<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
========
                    b.HasIndex("AccountAccontId");

                    b.HasIndex("BorrowerUserId");

                    b.HasIndex("UserId");

>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                    b.ToTable("LoanDetails");
                });

            modelBuilder.Entity("Repositories.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserIdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserPhone")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserIdentityNumber")
                        .IsUnique();

                    b.ToTable("Users");
<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
========

                    b.HasDiscriminator<string>("Discriminator").HasValue("Users");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Repositories.Models.Borrower", b =>
                {
                    b.HasBaseType("Repositories.Models.Users");

                    b.HasDiscriminator().HasValue("Borrower");
                });

            modelBuilder.Entity("Repositories.Models.Depositor", b =>
                {
                    b.HasBaseType("Repositories.Models.Users");

                    b.HasDiscriminator().HasValue("Depositor");
>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                });

            modelBuilder.Entity("Repositories.Models.Guarantor", b =>
                {
<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
                    b.HasOne("Repositories.Models.Account", "Account")
========
                    b.HasBaseType("Repositories.Models.Users");

                    b.HasDiscriminator().HasValue("Guarantor");
                });

            modelBuilder.Entity("GuarantorLoanDetails", b =>
                {
                    b.HasOne("Repositories.Models.Guarantor", null)
>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                        .WithMany()
                        .HasForeignKey("AccountAccontId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.LoanDetails", null)
                        .WithMany("Guarantors")
                        .HasForeignKey("LoanDetailsLoanId");

<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
                    b.Navigation("Account");
========
            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.HasOne("Repositories.Models.Borrower", "Borrower")
                        .WithMany("Acounts")
                        .HasForeignKey("BorrowerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Models.Guarantor", null)
                        .WithOne("Account")
                        .HasForeignKey("Repositories.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrower");
                });

            modelBuilder.Entity("Repositories.Models.Deposit", b =>
                {
                    b.HasOne("Repositories.Models.Depositor", null)
                        .WithMany("Deposits")
                        .HasForeignKey("DepositorUserId");
>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                });

            modelBuilder.Entity("Repositories.Models.LoanDetails", b =>
                {
<<<<<<<< HEAD:Repositories/Migrations/20231122130241_InitialCreate.Designer.cs
                    b.Navigation("Guarantors");
========
                    b.HasOne("Repositories.Models.Account", null)
                        .WithMany("Loans")
                        .HasForeignKey("AccountAccontId");

                    b.HasOne("Repositories.Models.Borrower", null)
                        .WithMany("Loans")
                        .HasForeignKey("BorrowerUserId");

                    b.HasOne("Repositories.Models.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("Repositories.Models.Borrower", b =>
                {
                    b.Navigation("Acounts");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("Repositories.Models.Depositor", b =>
                {
                    b.Navigation("Deposits");
                });

            modelBuilder.Entity("Repositories.Models.Guarantor", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
>>>>>>>> 8bcfd72444922fd51986c48f0b205c5f90b189e2:Repositories/Migrations/20231116152725_InitialCreate.Designer.cs
                });
#pragma warning restore 612, 618
        }
    }
}
